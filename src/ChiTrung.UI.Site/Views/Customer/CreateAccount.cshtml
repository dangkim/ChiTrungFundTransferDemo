@model ChiTrung.Application.ViewModels.AccountViewModel
@using ChiTrung.Application.ViewModels;
@{
    ViewData["Title"] = "Register new Customer";
    SelectList customers = ViewData["Customers"] as SelectList;
    SelectList banks = ViewData["Banks"] as SelectList;
}

<h2>@ViewData["Title"]</h2>

<form asp-action="CreateAccount">
    <div class="form-horizontal">
        <hr />

        @* Replacing classic Validation Summary to Custom ViewComponent as TagHelper *@
        <vc:summary />

        <div class="form-group">
            <label asp-for="AccCode" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="AccCode" class="form-control" />
                <span asp-validation-for="AccCode" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="BankCode" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="BankCode" class="form-control" asp-items="banks"></select>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="CusId" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="CusId" class="form-control" asp-items="customers"></select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="CreateAccount" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-info">Back to List</a>
            </div>
        </div>
    </div>
</form>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        $(document).ready(function () {
            $("#CusId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("GetVisitCustomer", "Customer")',
                        datatype: "json",
                        success: function (data) {
                            response($.map(data, function (val, item) {
                                return {
                                    label: val.CusId,
                                    value: val.CusId,
                                    cusId: CusId
                                }
                            }))
                        }
                    })
        },
        select: function (event, ui) {
            $("#CusId").val(ui.item.cusId);
        }
    });
});
    </script>
}
