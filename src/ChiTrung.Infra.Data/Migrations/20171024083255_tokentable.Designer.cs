// <auto-generated />
using ChiTrung.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ChiTrung.Infra.Data.Migrations
{
    [DbContext(typeof(ChiTrungContext))]
    [Migration("20171024083255_tokentable")]
    partial class tokentable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChiTrung.Domain.Models.Account", b =>
                {
                    b.Property<string>("AccCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CusId")
                        .IsRequired()
                        .HasColumnName("CusId");

                    b.HasKey("AccCode");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CancellationReason")
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ContactMobile")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("DateCreated");

                    b.Property<decimal>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeCreated");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("EndTimeExpected");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PriceExpected")
                        .HasColumnType("float");

                    b.Property<decimal>("PriceFinal")
                        .HasColumnType("float");

                    b.Property<decimal>("PriceFull")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("StartTime");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Atm", b =>
                {
                    b.Property<string>("AtmCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("AtmName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AtmCode");

                    b.ToTable("Atm");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Bank", b =>
                {
                    b.Property<string>("BankCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("BankCode");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ContactMail")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ContactMobile")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("ClientId");

                    b.HasIndex("ClientName", "ContactMobile")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Deposit", b =>
                {
                    b.Property<int>("DepCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CusId")
                        .IsRequired()
                        .HasColumnName("CusId");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<string>("WitCode");

                    b.HasKey("DepCode");

                    b.ToTable("Deposit");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.RToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsStop")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("RToken");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("From");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("To");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Duration");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ServiceId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.ServiceBooked", b =>
                {
                    b.Property<int>("ServiceBookedId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppointmentId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("ServiceId");

                    b.HasKey("ServiceBookedId");

                    b.ToTable("ServiceBooked");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.ServiceProvided", b =>
                {
                    b.Property<int>("ServiceProvidedId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppointmentId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("ServiceId");

                    b.HasKey("ServiceProvidedId");

                    b.ToTable("ServiceProvided");
                });

            modelBuilder.Entity("ChiTrung.Domain.Models.Withdrawal", b =>
                {
                    b.Property<string>("WitCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AtmCode")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("TransactionDate");

                    b.HasKey("WitCode");

                    b.ToTable("Withdrawal");
                });
#pragma warning restore 612, 618
        }
    }
}
